<?xml version="1.0" encoding="UTF-8"?>

<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:modelView="clr-namespace:learnSpanish.ModelView"
             xmlns:eventTriggerButton="clr-namespace:learnSpanish.Trigger.EventTrigger.ButtonEvent"
             xmlns:multiTrigger="clr-namespace:learnSpanish.Trigger.MultiTrigger"
             xmlns:behavior="clr-namespace:learnSpanish.Behavior.EntryBehavior"
             x:Class="learnSpanish.View.ContentPageView.RegisterPage"
             BackgroundColor="#C51405">

    <ContentPage.BindingContext>
        <modelView:RegisterView />
    </ContentPage.BindingContext>

    <ContentPage.Resources>
        <ResourceDictionary>
            <multiTrigger:CheckFieldsEmpty x:Key="CheckFieldsEmpty" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>

        <FlexLayout Direction="Column" 
                AlignContent="Center" 
                JustifyContent="SpaceEvenly"
                    Margin="20">
            
                <Label Text="Welcome!"
                       FontSize="20"
                       TextColor="#F9E105"/>


            <Entry x:Name="Name" Text="{Binding Name}" Placeholder="Name"
                       PlaceholderColor="Black" HeightRequest="40"
                       Keyboard="Text"
                       TextColor="Black" />

                <Entry x:Name="Email" Text="{Binding Email, Mode=TwoWay}" Placeholder="E-mail"
                       PlaceholderColor="Black" HeightRequest="40"
                       Keyboard="Text"
                       TextColor="Black">
                    <Entry.Behaviors>
                        <behavior:EmailValidatorBehavior x:Name="EmailValidatorBehavior"
                                                         IsValid="{Binding IsValidEmail, Mode=TwoWay}" />
                    </Entry.Behaviors>
                </Entry>

                <Entry x:Name="User" Text="{Binding UserName}" Placeholder="User"
                       PlaceholderColor="Black" HeightRequest="40"
                       Keyboard="Text"
                       TextColor="Black" />

                <Entry x:Name="Password" Text="{Binding Password}" Placeholder="Password"
                       PlaceholderColor="Black" HeightRequest="40"
                       Keyboard="Text"
                       TextColor="Black"
                       IsPassword="True" />

                <Entry x:Name="ConfirmPassword" Text="{Binding ConfirmPassword, Mode=TwoWay}"
                       Placeholder="confirm your password"
                       PlaceholderColor="Black" HeightRequest="40"
                       Keyboard="Text"
                       TextColor="Black"
                       IsPassword="True">
                    <Entry.Behaviors>
                        <behavior:ConfirmPasswordBehavior x:Name="ConfirmPasswordBehavior"
                                                          CompareToEntry="{Binding Source={x:Reference Password}}"
                                                          IsValid="{Binding IsValidConfirmedPassword, Mode=TwoWay} " />
                    </Entry.Behaviors>
                </Entry>

                <Button Text="Create"
                        IsEnabled="False"
                        BorderRadius="20"
                        BackgroundColor="#2494F6">
                    
                    <Button.Triggers>
                        <EventTrigger Event="Clicked">
                            <eventTriggerButton:Action />
                        </EventTrigger>
                        <MultiTrigger TargetType="Button">
                            <MultiTrigger.Conditions>
                                <BindingCondition
                                    Binding="{Binding Source={x:Reference Name}, Path=Text.Length, Converter={StaticResource CheckFieldsEmpty}}"
                                    Value="true" />
                                <BindingCondition
                                    Binding="{Binding Source={x:Reference EmailValidatorBehavior}, Path=IsValid}"
                                    Value="true" />
                                <BindingCondition
                                    Binding="{Binding Source={x:Reference User}, Path=Text.Length, Converter={StaticResource CheckFieldsEmpty}}"
                                    Value="true" />
                                <BindingCondition
                                    Binding="{Binding Source={x:Reference Password}, Path=Text.Length, Converter={StaticResource CheckFieldsEmpty}}"
                                    Value="true" />
                                <BindingCondition
                                    Binding="{Binding Source={x:Reference ConfirmPasswordBehavior}, Path=IsValid}"
                                    Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="true" />
                            <Setter Property="Command" Value="{Binding CreateCommand}" />
                        </MultiTrigger>
                    </Button.Triggers>
                </Button>
                <Button Text="Cancel"
                        Command="{Binding CancelCommand}"
                        BorderRadius="20"
                        BackgroundColor="#DDF9F7">
                    <Button.Triggers>
                        <EventTrigger Event="Clicked">
                            <eventTriggerButton:Action />
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
                </FlexLayout>
    </ContentPage.Content>
</ContentPage>